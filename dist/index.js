"use strict";var Oe=Object.create;var B=Object.defineProperty;var Ae=Object.getOwnPropertyDescriptor;var Pe=Object.getOwnPropertyNames;var Ue=Object.getPrototypeOf,Me=Object.prototype.hasOwnProperty;var Ee=(o,t,s,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of Pe(t))!Me.call(o,r)&&r!==s&&B(o,r,{get:()=>t[r],enumerable:!(e=Ae(t,r))||e.enumerable});return o};var u=(o,t,s)=>(s=o!=null?Oe(Ue(o)):{},Ee(t||!o||!o.__esModule?B(s,"default",{value:o,enumerable:!0}):s,o));var C=u(require("express"));var M=require("express");var W=require("@prisma/client"),x=new W.PrismaClient,T=async(o,t,s)=>{try{let e=await x.customer.findMany();t.send(e)}catch(e){s(e)}},O=async(o,t,s)=>{try{let e=o.params.id,r=await x.customer.findUnique({where:{cust_id:parseInt(e)}});t.send(r)}catch(e){s(e)}},A=async(o,t,s)=>{try{let{cust_fname:e,cust_lname:r,contact_no:n}=o.body,a=await x.customer.create({data:{cust_fname:e,cust_lname:r,contact_no:n}});t.json(a)}catch(e){s(e)}},P=async(o,t,s)=>{try{let{id:e}=o.params,{cust_fname:r,cust_lname:n,contact_no:a}=o.body,i=await x.customer.update({where:{cust_id:parseInt(e)},data:{cust_fname:r,cust_lname:n,contact_no:a}});i?t.json(i):t.status(404).json({error:"Customer not found"})}catch(e){s(e)}},U=async(o,t,s)=>{try{let{id:e}=o.params,r=await x.customer.delete({where:{cust_id:parseInt(e)}});r?t.json(r):t.status(404).json({error:"Customer not found"})}catch(e){s(e)}};var b=(0,M.Router)();b.get("/",T).get("/:id",O).post("/",A).put("/:id",P).delete(":/id",U);var D=require("express");var E=require("@prisma/client"),h=new E.PrismaClient,H=async(o,t,s)=>{try{let e=await h.order.findMany();t.json(e)}catch(e){s(e)}},S=async(o,t,s)=>{try{let e=o.params.id,r=await h.order.findUnique({where:{ord_no:parseInt(e)}});t.send(r)}catch(e){s(e)}},k=async(o,t,s)=>{try{let{cust_id:e,waiter_id:r}=o.body,n=await h.order.create({data:{cust_id:parseInt(e),waiter_id:parseInt(r)}});t.json(n)}catch(e){s(e)}},z=async(o,t,s)=>{try{let e=o.params.id,{cust_id:r,waiter_id:n}=o.body,a=await h.order.update({where:{ord_no:parseInt(e)},data:{cust_id:parseInt(r),waiter_id:parseInt(n)}});t.json(a)}catch(e){s(e)}},v=async(o,t,s)=>{try{let e=o.params.id,r=await h.order.delete({where:{ord_no:parseInt(e)}});t.json(r)}catch(e){s(e)}};var I=(0,D.Router)();I.get("/",H).get("/:id",S).post("/",k).put("/:id",z).delete("/:id",v);var X=u(require("express"));var G=require("@prisma/client"),_=new G.PrismaClient,J=async(o,t,s)=>{try{let e=await _.waiter.findMany({include:{Orders:!0,Tips:!0}});t.json(e)}catch(e){s(e)}},K=async(o,t,s)=>{try{let{id:e}=o.params,r=await _.waiter.findUnique({where:{waiter_id:Number(e)},include:{Orders:!0,Tips:!0}});if(!r)return t.status(404).json({message:"Waiter not found"});t.json(r)}catch(e){s(e)}},L=async(o,t,s)=>{try{let{waiter_fname:e,waiter_lname:r}=o.body,n=await _.waiter.create({data:{waiter_fname:e,waiter_lname:r}});t.status(201).json(n)}catch(e){s(e)}},Q=async(o,t,s)=>{try{let{id:e}=o.params,{waiter_fname:r,waiter_lname:n}=o.body,a=await _.waiter.update({where:{waiter_id:Number(e)},data:{waiter_fname:r,waiter_lname:n}});if(!a)return t.status(404).json({message:"Waiter not found"});t.json(a)}catch(e){s(e)}},V=async(o,t,s)=>{try{let{id:e}=o.params,r=await _.waiter.delete({where:{waiter_id:Number(e)}});if(!r)return t.status(404).json({message:"Waiter not found"});t.json(r)}catch(e){s(e)}};var p=X.default.Router();p.get("/",J);p.get("/:id",K);p.post("/",L);p.put("/:id",Q);p.delete("/:id",V);var se=u(require("express"));var Y=require("@prisma/client"),g=new Y.PrismaClient,Z=async(o,t,s)=>{try{let e=await g.tip.findMany({include:{customer:!0,waiter:!0}});t.json(e)}catch(e){s(e)}},$=async(o,t,s)=>{try{let{customerId:e,waiterId:r}=o.params,n=await g.tip.findUnique({where:{cust_id_waiter_id:{cust_id:Number(e),waiter_id:Number(r)}},include:{customer:!0,waiter:!0}});if(!n)return t.status(404).json({message:"Tip not found"});t.json(n)}catch(e){s(e)}},ee=async(o,t,s)=>{try{let{cust_id:e,waiter_id:r,tip:n}=o.body,a=await g.tip.create({data:{cust_id:e,waiter_id:r,tip:n}});t.status(201).json(a)}catch(e){s(e)}},te=async(o,t,s)=>{try{let{customerId:e,waiterId:r}=o.params,{tip:n}=o.body,a=await g.tip.update({where:{cust_id_waiter_id:{cust_id:Number(e),waiter_id:Number(r)}},data:{tip:n}});if(!a)return t.status(404).json({message:"Tip not found"});t.json(a)}catch(e){s(e)}},oe=async(o,t,s)=>{try{let{customerId:e,waiterId:r}=o.params,n=await g.tip.delete({where:{cust_id_waiter_id:{cust_id:Number(e),waiter_id:Number(r)}}});if(!n)return t.status(404).json({message:"Tip not found"});t.json(n)}catch(e){s(e)}};var m=se.default.Router();m.get("/",Z);m.get("/:customerId/:waiterId",$);m.post("/",ee);m.put("/:customerId/:waiterId",te);m.delete("/:customerId/:waiterId",oe);var ue=u(require("express"));var re=require("@prisma/client"),N=new re.PrismaClient,ne=async(o,t,s)=>{try{let e=await N.food.findMany({include:{chef:!0,Contains:!0}});t.json(e)}catch(e){s(e)}},ae=async(o,t,s)=>{try{let{id:e}=o.params,r=await N.food.findUnique({where:{item_no:Number(e)},include:{chef:!0,Contains:!0}});if(!r)return t.status(404).json({message:"Food item not found"});t.json(r)}catch(e){s(e)}},ie=async(o,t,s)=>{try{let{item_name:e,item_type:r,item_price:n,item_stock:a,chef_id:i}=o.body,d=await N.food.create({data:{item_name:e,item_type:r,item_price:n,item_stock:a,chef_id:i}});t.status(201).json(d)}catch(e){s(e)}},ce=async(o,t,s)=>{try{let{id:e}=o.params,{item_name:r,item_type:n,item_price:a,item_stock:i,chef_id:d}=o.body,w=await N.food.update({where:{item_no:Number(e)},data:{item_name:r,item_type:n,item_price:a,item_stock:i,chef_id:d}});if(!w)return t.status(404).json({message:"Food item not found"});t.json(w)}catch(e){s(e)}},de=async(o,t,s)=>{try{let{id:e}=o.params,r=await N.food.delete({where:{item_no:Number(e)}});if(!r)return t.status(404).json({message:"Food item not found"});t.json(r)}catch(e){s(e)}};var l=ue.default.Router();l.get("/",ne);l.get("/:id",ae);l.post("/",ie);l.put("/:id",ce);l.delete("/:id",de);var we=u(require("express"));var pe=require("@prisma/client"),F=new pe.PrismaClient,me=async(o,t,s)=>{try{let e=await F.chef.findMany({include:{Foods:!0}});t.json(e)}catch(e){s(e)}},le=async(o,t,s)=>{try{let{id:e}=o.params,r=await F.chef.findUnique({where:{chef_id:Number(e)},include:{Foods:!0}});if(!r)return t.status(404).json({message:"Chef not found"});t.json(r)}catch(e){s(e)}},fe=async(o,t,s)=>{try{let{chef_fname:e,chef_lname:r,chef_type:n}=o.body,a=await F.chef.create({data:{chef_fname:e,chef_lname:r,chef_type:n}});t.status(201).json(a)}catch(e){s(e)}},ye=async(o,t,s)=>{try{let{id:e}=o.params,{chef_fname:r,chef_lname:n,chef_type:a}=o.body,i=await F.chef.update({where:{chef_id:Number(e)},data:{chef_fname:r,chef_lname:n,chef_type:a}});if(!i)return t.status(404).json({message:"Chef not found"});t.json(i)}catch(e){s(e)}},Re=async(o,t,s)=>{try{let{id:e}=o.params,r=await F.chef.delete({where:{chef_id:Number(e)}});if(!r)return t.status(404).json({message:"Chef not found"});t.json(r)}catch(e){s(e)}};var f=we.default.Router();f.get("/",me);f.get("/:id",le);f.post("/",fe);f.put("/:id",ye);f.delete("/:id",Re);var je=u(require("express"));var xe=require("@prisma/client"),j=new xe.PrismaClient,he=async(o,t,s)=>{try{let e=await j.bill.findMany({include:{Order:!0}});t.json(e)}catch(e){s(e)}},_e=async(o,t,s)=>{try{let{id:e}=o.params,r=await j.bill.findUnique({where:{bill_no:Number(e)},include:{Order:!0}});if(!r)return t.status(404).json({message:"Bill not found"});t.json(r)}catch(e){s(e)}},ge=async(o,t,s)=>{try{let{tot_price:e,tax:r,discount:n,net_payable:a,ord_no:i}=o.body,d=await j.bill.create({data:{tot_price:e,tax:r,discount:n,net_payable:a,ord_no:i}});t.status(201).json(d)}catch(e){s(e)}},Ne=async(o,t,s)=>{try{let{id:e}=o.params,{tot_price:r,tax:n,discount:a,net_payable:i,ord_no:d}=o.body,w=await j.bill.update({where:{bill_no:Number(e)},data:{tot_price:r,tax:n,discount:a,net_payable:i,ord_no:d}});if(!w)return t.status(404).json({message:"Bill not found"});t.json(w)}catch(e){s(e)}},Fe=async(o,t,s)=>{try{let{id:e}=o.params,r=await j.bill.delete({where:{bill_no:Number(e)}});if(!r)return t.status(404).json({message:"Bill not found"});t.json(r)}catch(e){s(e)}};var y=je.default.Router();y.get("/",he);y.get("/:id",_e);y.post("/",ge);y.put("/:id",Ne);y.delete("/:id",Fe);var We=u(require("express"));var qe=require("@prisma/client"),q=new qe.PrismaClient,be=async(o,t,s)=>{try{let e=await q.contains.findMany({include:{food:!0,order:!0}});t.json(e)}catch(e){s(e)}},Ie=async(o,t,s)=>{try{let{itemId:e,orderId:r}=o.params,n=await q.contains.findUnique({where:{item_no_ord_no:{item_no:Number(e),ord_no:Number(r)}},include:{food:!0,order:!0}});if(!n)return t.status(404).json({message:"Contains relation not found"});t.json(n)}catch(e){s(e)}},Ce=async(o,t,s)=>{try{let{item_no:e,ord_no:r}=o.body,n=await q.contains.create({data:{item_no:e,ord_no:r}});t.status(201).json(n)}catch(e){s(e)}},Be=async(o,t,s)=>{try{let{itemId:e,orderId:r}=o.params,n=await q.contains.delete({where:{item_no_ord_no:{item_no:Number(e),ord_no:Number(r)}}});if(!n)return t.status(404).json({message:"Contains relation not found"});t.json(n)}catch(e){s(e)}};var R=We.default.Router();R.get("/",be);R.get("/:itemId/:orderId",Ie);R.post("/",Ce);R.delete("/:itemId/:orderId",Be);var Te=(o,t,s,e)=>{let r=o.status||500;switch(r){case 400:return s.status(r).json({message:"Bad Request"});case 401:return s.status(r).json({message:"Unauthorized"});case 403:return s.status(r).json({message:"Forbidden"});case 404:return s.status(r).json({message:"Not Found"})}return console.error(o),s.status(r).json({message:"Something went wrong. Please try again later."})};var c=(0,C.default)();c.use(C.default.json());c.use("/customers",b);c.use("/orders",I);c.use("/waiters",p);c.use("/tips",m);c.use("/foods",l);c.use("/chefs",f);c.use("/bills",y);c.use("/contains",R);c.use(Te);c.get("/",(o,t)=>{t.send("Hello World!")});c.listen(3e3);
//# sourceMappingURL=index.js.map
